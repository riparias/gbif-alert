# Generated by Django 4.2.13 on 2024-06-05 12:36
import datetime

from django.db import migrations

import logging

from django.utils import timezone


def get_console_logger():
    logger = logging.getLogger(__name__)
    handler = logging.StreamHandler()
    logger.addHandler(handler)
    logger.setLevel(logging.INFO)

    logger.info("starting logger")
    return logger


def delete_all_obs_unseen(apps, schema_editor):
    logger = get_console_logger()

    logger.info("deleting all 'observation unseen' objects")
    ObservationUnseen = apps.get_model("dashboard", "ObservationUnseen")
    ObservationUnseen.objects.all().delete()


def migrate_obs_views_new_mechanism(apps, schema_editor):
    Observation = apps.get_model("dashboard", "Observation")
    User = apps.get_model("dashboard", "User")
    ObservationUnseen = apps.get_model("dashboard", "ObservationUnseen")

    logger = get_console_logger()

    one_year_ago = (timezone.now() - datetime.timedelta(days=365)).date()

    all_users = User.objects.all()
    for i, obs in enumerate(
        Observation.objects.all().prefetch_related("observationview_set")
    ):
        if i % 1000 == 0:
            logger.info(f"{str(datetime.datetime.now())} - {i} observations processed")

        if obs.date > one_year_ago:
            unseen_to_create = []
            for user in all_users:
                if not obs.observationview_set.filter(user=user).exists():
                    # obs.observationunseen_set.create(user=user)
                    unseen_to_create.append(
                        ObservationUnseen(user=user, observation=obs)
                    )

            ObservationUnseen.objects.bulk_create(unseen_to_create)


class Migration(migrations.Migration):
    dependencies = [
        ("dashboard", "0018_observationunseen"),
    ]

    operations = [
        migrations.RunPython(
            migrate_obs_views_new_mechanism, reverse_code=delete_all_obs_unseen
        )
    ]
